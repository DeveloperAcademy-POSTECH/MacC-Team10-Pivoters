//
//  MockData.swift
//  Feature
//
//  Created by 한지석 on 11/16/23.
//  Copyright © 2023 com.pivoters. All rights reserved.
//

import Foundation

import Core

struct MockData {
//    static let teams: [Team] = [
//        Team(id: UUID(), teamName: "첼시 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "토트넘 훗스퍼", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "갈라타사라이 현대 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "첼시 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "토트넘 훗스퍼", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "갈라타사라이 현대 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "첼시 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "토트넘 훗스퍼", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup),
//        Team(id: UUID(), teamName: "갈라타사라이 현대 FC", subTitle: "2023 아시안 챔피언스 리그 결승전 선발 멤버", lineup: MockData.initLineup)
//    ]

    static let initLineup: [Lineup] = [
        Lineup(id: UUID(), index: 0,
               lineupName: "잉잉",
               uniform: .plain,
               formation: .eleven,
               selectedTypeOfFormation: .football433,
               players: MockData.player,
               primaryColor: UniformColor(red: 0, green: 0, blue: 0),
               secondaryColor: UniformColor(red: 255, green: 255, blue: 255),
               theme: .blackBlue),
        Lineup(id: UUID(), index: 1,
               lineupName: "잉잉",
               uniform: .plain,
               formation: .eleven,
               selectedTypeOfFormation: .football433,
               players: MockData.player,
               primaryColor: UniformColor(red: 0, green: 0, blue: 0),
               secondaryColor: UniformColor(red: 255, green: 255, blue: 255),
               theme: .blackBlue),
        Lineup(id: UUID(), index: 2,
               lineupName: "잉잉",
               uniform: .plain,
               formation: .eleven,
               selectedTypeOfFormation: .football433,
               players: MockData.player,
               primaryColor: UniformColor(red: 0, green: 0, blue: 0),
               secondaryColor: UniformColor(red: 255, green: 255, blue: 255),
               theme: .blackBlue),
    ]

    static let player: [Player] = [
        Player(id: UUID(),
               name: " ",
               number: 1,
               isGoalkeeper: true,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 100,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 100)),
        Player(id: UUID(),
               name: " ",
               number: 2,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: -75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 3,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: 75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 4,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: 140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 5,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: -140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 6,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 20,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 20)),
        Player(id: UUID(),
               name: " ",
               number: 7,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 8,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 9,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 10,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 130,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 11,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: -130,
                                   accumulatedOffsetHeight: -80)),
    ]
    static let player1: [Player] = [
        Player(id: UUID(),
               name: " ",
               number: 1,
               isGoalkeeper: true,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 100,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 100)),
        Player(id: UUID(),
               name: " ",
               number: 2,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: -75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 3,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: 75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 4,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: 140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 5,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: -140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 6,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 20,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 20)),
        Player(id: UUID(),
               name: " ",
               number: 7,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 8,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 9,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 10,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 130,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 11,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: -130,
                                   accumulatedOffsetHeight: -80)),

    ]
    static let player2: [Player] = [
        Player(id: UUID(),
               name: " ",
               number: 1,
               isGoalkeeper: true,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 100,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 100)),
        Player(id: UUID(),
               name: " ",
               number: 2,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: -75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 3,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 75,
                                   draggedOffsetHeight: 50,
                                   accumulatedOffsetWidth: 75,
                                   accumulatedOffsetHeight: 50)),
        Player(id: UUID(),
               name: " ",
               number: 4,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: 140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 5,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -140,
                                   draggedOffsetHeight: 30,
                                   accumulatedOffsetWidth: -140,
                                   accumulatedOffsetHeight: 30)),
        Player(id: UUID(),
               name: " ",
               number: 6,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: 20,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: 20)),
        Player(id: UUID(),
               name: " ",
               number: 7,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 8,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 70,
                                   draggedOffsetHeight: -20,
                                   accumulatedOffsetWidth: 70,
                                   accumulatedOffsetHeight: -20)),
        Player(id: UUID(),
               name: " ",
               number: 9,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 0,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 0,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 10,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: 130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: 130,
                                   accumulatedOffsetHeight: -80)),
        Player(id: UUID(),
               name: " ",
               number: 11,
               isGoalkeeper: false,
               offset: OffsetValue(draggedOffsetWidth: -130,
                                   draggedOffsetHeight: -80,
                                   accumulatedOffsetWidth: -130,
                                   accumulatedOffsetHeight: -80)),

    ]
}
